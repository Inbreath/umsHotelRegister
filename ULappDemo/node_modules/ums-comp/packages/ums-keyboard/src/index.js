'use strict'

Object.defineProperty(exports, "__esModule", {
    value: true
})

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj } /**
                                                                                                                                                                                                                                                                               * Created by zmw on 2017/6/4.
                                                                                                                                                                                                                                                                               */


var _keyboard = require('./index.vue')

var _keyboard2 = _interopRequireDefault(_keyboard)

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj } }

var keyboardVueConstructor = Vue.extend(_keyboard2.default)

module.exports = {
    bind: function bind(el, binding, vnode) {
        initKeyboard(el, binding, vnode)
    }
}


var initKeyboard = function initKeyboard(el, binding, vnode) {
    var modifiers = binding.modifiers //指令的修饰词
    var value = binding.value //键盘的配置对象
    var oldValue = binding.oldValue
    if (value === null) {
        return
    }

    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' && typeof value !== 'function') {
        return console.error('Directive "v-keyboard" must have a object config')
    }

    var config = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value || {}

    if (!modifiers && modifiers !== 'number' && modifiers !== 'amount' && modifiers !== 'alpha') {
        return console.error('please choose keyboard type (number,amount,alpha)!')
    }

    if (!config.type && modifiers) {
        config.type = modifiers['number'] && 'number' || modifiers['amount'] && 'amount' || modifiers['alpha'] && 'alpha'
    }

    if (typeof value === 'function') {
        config.keyboardInput = value
    }

    var keyboard = el.keyboard ? el.keyboard : new keyboardVueConstructor()
    config.type !== undefined && (keyboard.type = config.type)
    config.isRandom !== undefined && (keyboard.isRandom = config.isRandom)
    config.limit !== undefined && (keyboard.limit = config.limit)

    if (typeof config.keyboardInput == 'function') {
        keyboard.$on('keyboardInput', function (val) {
            config.keyboardInput(val)
        })
    }

    if (typeof config.onConfirmClick == 'function') {
        keyboard.$on('onConfirmClick', function () {
            config.onConfirmClick()
        })
    }

    if (typeof config.onNextClick == 'function') {
        keyboard.$on('onClickNextButton', function () {
            config.onNextClick()
        })
    }

    keyboard.getTarget = function () {
        return el
    }

    if (!config.container) {
        config.container = vnode.elm
    }

    if (!el.keyboard) {
        config.container.insertAfter(keyboard.$mount().$el)
    }

    el.keyboard = keyboard
}
